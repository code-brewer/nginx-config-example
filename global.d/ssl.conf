# SSL Module: http://wiki.nginx.org/HttpSslModule

# SSLv2 and SSLv3 are too weak.  Disable them.

ssl_protocols TLSv1 TLSv1.1 TLSv1.2;

# Cipher recommendation taken from
# https://wiki.mozilla.org/Security/Server_Side_TLS, requiring RSA, and with
# wildcards removed.

ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-SHA256:ECDHE-RSA-AES128-SHA:ECDHE-RSA-AES256-SHA384:ECDHE-RSA-AES256-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA:DHE-RSA-AES256-SHA256:DHE-RSA-AES256-SHA:AES128-GCM-SHA256:AES256-GCM-SHA384:AES128-SHA256:AES256-SHA256:AES128-SHA:AES256-SHA:DES-CBC3-SHA;
ssl_prefer_server_ciphers on;

# Allow SSL session resumption to skip part of handshake with a given client
# if we've done it recently.

ssl_session_cache shared:SSL:50m;  # 4000 entries per 1meg
ssl_session_timeout 10m;	# Full handshake how often?

# Use a 2048-bit dhparam.  This is not sensitive.

ssl_dhparam global.d/ssl-dhparam.pem;

# Enable caching of OCSP validation from our CA and stapling it to our TLS
# handshake response.

#ssl_stapling on;
#ssl_stapling_verify on;

# Chain of intermediates we might need for ssl_stapling_verify, in order
# from closest to our cert to the root.

#ssl_trusted_certificate global.d/ssl-trusted.crt;

# Buffer size of 1400 bytes fits in one MTU.  This allows faster parsing of
# responses, as the client doesn't need to wait for a 4k boundary, but adds
# overhead.

ssl_buffer_size 1400;
